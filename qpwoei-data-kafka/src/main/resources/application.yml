server:
  port: 0

spring:
  h2:
    console:
      enabled: false
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb
    username: sa
    password:
  kafka:
    consumer:
      bootstrap-servers: localhost:19092
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    producer:
      bootstrap-servers: localhost:19092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    listener:
      ack-mode: manual

kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.StringSerializer
  value-serializer-class: org.apache.kafka.common.serialization.StringSerializer
  compression-type: snappy
  acks: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger-ms: 5
  request-timeout-ms: 60000
  retry-count: 5


kafka-consumer-config:
  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  review-consumer-group-id: review-topic-consumer
  statistics-consumer-group-id: statistics-topic-consumer
  users-consumer-group-id: users-topic-consumer
  auto-offset-reset: earliest
  specific-avro-reader-key: specific.avro.reader
  specific-avro-reader: true
  batch-listener: true
  auto-startup: true
  concurrency-level: 3
  session-timeout-ms: 10000
  heartbeat-interval-ms: 3000
  max-poll-interval-ms: 300000
  max-poll-records: 500
  max-partition-fetch-bytes-default: 1048576
  max-partition-fetch-bytes-boost-factor: 1
  poll-timeout-ms: 150

### 예시 1) review-service
### (각 서비스의 src/main/resources/application.yml 에 추가하면 됨)
#review-service:
#  review-request-topic-name: review-request
#  review-response-topic-name: review-response
#  outbox-scheduler-fixed-rate: 10000
#  outbox-scheduler-initial-delay: 10000

### 예시 2) history-service
### (각 서비스의 src/main/resources/application.yml 에 추가하면 됨)
#history-service:
#  history-request-topic-name: history-request
#  history-response-topic-name: history-response
#  outbox-scheduler-fixed-rate: 10000
#  outbox-scheduler-initial-delay: 10000